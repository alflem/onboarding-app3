name: Build and deploy Next.js app to Azure Web App

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  APPLICATION_PUBLISH_PROFILE: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
  WEBAPP_NAME: "onboarding-app"
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: npm install
        run: npm install

      - name: Clean and regenerate Prisma client
        run: |
          echo "=== Current Prisma schema configuration ==="
          grep -A 7 "generator client" prisma/schema.prisma
          echo "=== Cleaning old Prisma clients (forum user solution) ==="
          rm -rf node_modules/.prisma
          rm -rf node_modules/@prisma/client
          rm -rf prisma/generated
          echo "=== Generating Prisma client with custom output ==="
          npx prisma generate
          echo "=== Prisma client generation completed ==="

      - name: Verify Debian binaries are generated
        run: |
          echo "=== Checking custom output location ==="
          ls -la prisma/generated/client/ || echo "No custom client found"
          echo "=== Looking for Debian binaries ==="
          find prisma/generated -name "*debian*" -type f || echo "No Debian binaries found"
          find node_modules -name "*debian*" -type f || echo "No Debian binaries in node_modules"
          echo "=== Checking all available engines ==="
          find prisma/generated -name "*query*engine*" -type f || echo "No query engines in custom location"

      - name: Handle database migrations (with baseline support)
        run: |
          echo "=== Checking migration status ==="
          # First, try to run migrate deploy
          if ! npx prisma migrate deploy; then
            echo "=== Migration deploy failed, attempting to baseline existing database ==="

            # Get the list of migrations
            echo "=== Available migrations ==="
            ls -la prisma/migrations/ || echo "No migrations folder found"

            # Mark all existing migrations as applied (baseline)
            for migration_dir in prisma/migrations/*/; do
              if [ -d "$migration_dir" ]; then
                migration_name=$(basename "$migration_dir")
                echo "=== Marking migration as applied: $migration_name ==="
                npx prisma migrate resolve --applied "$migration_name" || echo "Failed to resolve $migration_name"
              fi
            done

            echo "=== Re-attempting migrate deploy after baseline ==="
            npx prisma migrate deploy
          else
            echo "=== Migration deploy successful ==="
          fi
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}

      - name: Auto-seed pre-assigned admin roles
        run: |
          echo "=== Auto-seeding pre-assigned roles if needed ==="
          node scripts/auto-seed-roles.js || echo "Auto-seeding completed with warnings"
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}

      - name: Seed database (optional)
        run: |
          npx prisma db seed || echo "No seed script found, skipping..."
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}

      - name: Build application
        run: |
          npm run build

      - name: Prepare standalone deployment with custom Prisma client
        run: |
          echo "=== Copying static files ==="
          cp -r ./public ./.next/standalone/ || true
          cp -r ./.next/static ./.next/standalone/.next/ || true
          echo "=== Copying complete prisma directory with generated client ==="
          cp -r ./prisma ./.next/standalone/ || echo "Failed to copy prisma folder"
          echo "=== Copying essential node_modules for Prisma ==="
          mkdir -p ./.next/standalone/node_modules
          cp -r ./node_modules/@next-auth ./.next/standalone/node_modules/ || true
          cp -r ./node_modules/next-auth ./.next/standalone/node_modules/ || true
          echo "=== Verifying Prisma custom client in deployment ==="
          ls -la ./.next/standalone/prisma/generated/client/ || echo "No custom client in deployment"
          find ./.next/standalone/prisma/generated -name "*debian*" -type f || echo "No Debian binaries in deployment"

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          slot-name: "Production"
          publish-profile: ${{ env.APPLICATION_PUBLISH_PROFILE }}
          package: ./.next/standalone